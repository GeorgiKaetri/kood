const express = require('express');
const bodyParser = require('body-parser');
const session = require('express-session');
const passport = require('passport');
const LocalStrategy = require('passport-local').Strategy;

const app = express();
const PORT = process.env.PORT || 3000;

// Mock in-memory "database", tegelikult peaksid kasutama pÃ¤ris andmebaasi
const users = [];
const catImages = [];

// Middlewares
app.use(bodyParser.urlencoded({ extended: true }));
app.use(bodyParser.json());
app.use(session({ secret: 'your-secret-key', resave: true, saveUninitialized: true }));
app.use(passport.initialize());
app.use(passport.session());

passport.use(new LocalStrategy(
  (username, password, done) => {
    const user = users.find(u => u.username === username && u.password === password);
    return user ? done(null, user) : done(null, false, { message: 'Incorrect username or password.' });
  }
));

passport.serializeUser((user, done) => {
  done(null, user.id);
});

passport.deserializeUser((id, done) => {
  const user = users.find(u => u.id === id);
  done(null, user);
});

app.post('/register', (req, res) => {
  const { username, password, firstName, lastName, age, gender } = req.body;
  const user = { id: users.length + 1, username, password, firstName, lastName, age, gender };
  users.push(user);
  res.redirect('/login');
});

app.post('/login', passport.authenticate('local'), (req, res) => {
  res.redirect('/profile');
});

// Endpoint kasutajaprofiili info saamiseks
app.get('/profile', (req, res) => {
  if (req.isAuthenticated()) {
    res.json(req.user);
  } else {
    res.status(401).json({ message: 'Unauthorized' });
  }
});

// Endpoint kassipiltide salvestamiseks
app.post('/saveCatImage', (req, res) => {
  if (req.isAuthenticated()) {
    const { imageUrl } = req.body;
    const catImage = { userId: req.user.id, imageUrl };
    catImages.push(catImage);
    res.json({ message: 'Cat image saved successfully.' });
  } else {
    res.status(401).json({ message: 'Unauthorized' });
  }
});

app.listen(PORT, () => {
  console.log(`Server running on http://localhost:${PORT}`);
});
